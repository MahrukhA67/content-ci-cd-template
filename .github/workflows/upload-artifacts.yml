# Reusable workflow to upload artifacts to cloud storage provider
#
# This workflow uses OpenID Connect (OIDC) to authenticate

name: Upload Artifacts to Cloud Storage
on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string
      pack_names:
        required: true
        type: string
      artifact_folder:
        required: true
        type: string
    secrets:
      storage_provider:
        required: true
      bucket_name:
        required: true
      aws_assume_role:
        required: false
      workload_identity_provider:
        required: false
      service_account:
        required: false
jobs:
  upload:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      STORAGE_PROVIDER: ${{ secrets.storage_provider }}
      BRANCH_NAME: ${{ inputs.branch_name }}
      PACK_NAMES: ${{ inputs.pack_names }}
      ARTIFACT_FOLDER: ${{ inputs.artifact_folder }}
      BUCKET_NAME: ${{ secrets.bucket_name }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.ARTIFACT_FOLDER }}
      - run: tree
      - id: provider
        run: |
          if [ ${STORAGE_PROVIDER} == 'aws' ]; then
            echo "Using Amazon Web Services for artifact storage."
            echo "::set-output name=provider::aws"
          elif [ ${STORAGE_PROVIDER} == 'gcp' ]; then
            echo "Using Google Cloud Platform for artifact storage."
            echo "::set-output name=provider::gcp"
          else
            echo "No storage provider selected. Artifacts will not be uploaded."
            exit 1
          fi
      - if: steps.provider.outputs.provider == 'aws'
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.aws_assume_role }}
          aws-region: "us-east-1"
      - if: steps.provider.outputs.provider == 'gcp'
        name: Authenticate to GCP
        uses: google-github-actions/auth@v0
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.workload_identity_provider }}
          service_account: ${{ secrets.service_account }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5
      - if: steps.provider.outputs.provider == 'aws'
        name: Install AWS requirements
        run: pip install boto3 prettytable
      - if: steps.provider.outputs.provider == 'gcp'
        name: Install AWS requirements
        run: pip install gsutil prettytable
      - if: steps.provider.outputs.provider != ''
        name: Upload Packs to Artifacts Server
        run: |
          if [ ${BUCKET_NAME} == '' ]; then
            echo "BUCKET_NAME required."
            exit 1
          fi
          echo "Uploading packs ${PACK_NAMES}..."
          python $GITHUB_WORKSPACE/build_related_scripts/bucket_upload_${STORAGE_PROVIDER}.py \
            --bucket_name "${BUCKET_NAME}" \
            --packs_directory "${ARTIFACT_FOLDER}/uploadable_packs" \
            --branch_name "${BRANCH_NAME}" \
            --verbose
